@page "/add"
@inject HttpClient httpClient
@inject NavigationManager NavigationManager

<h1>Add A Student</h1>

<p>Add a student by filling out the required information</p>

@if (students != null) // Insert form
{
    <EditForm Model="@student" OnValidSubmit="@HandleAdd">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <InputText placeholder="BCIT ID" id="bcitId" @bind-Value="@student.BcitId" />
        <br />
        <InputText placeholder="First Name" id="firstName" @bind-Value="@student.FirstName" />
        <br />
        <InputText placeholder="Last Name" id="lastName" @bind-Value="@student.LastName" />
        <br />
        <InputText placeholder="Mobile Number" id="mobileNumber" @bind-Value="@student.MobileNumber" />
        <br />
        <InputText placeholder="Email Address" id="emailAddress" @bind-Value="@student.EmailAddress" />
        <br />
        <InputText placeholder="City Of Residence" id="cityOfResidence" @bind-Value="@student.CityOfResidence" />
        <br />
        <InputText placeholder="Specialization" id="Specialization" @bind-Value="@student.Specialization" />
        <br />
        <button type="submit" value="Add" class="btn btn-success">Submit</button>
        <a href="/students">
            <button value="Back" class="btn btn-secondary">Cancel</button>
        </a>
    </EditForm>

    @code {
        private Student student = new Student();

        private async void HandleAdd()
        {
            string endpoint = $"{baseUrl}api/students";

            await httpClient.PostAsJsonAsync(endpoint, student);

            await load();
            StateHasChanged(); // causes the page to get automatically refreshed
            
            NavigationManager.NavigateTo("/students");
        }
    }
}

@code {
    Student[] students;
    string baseUrl = "http://localhost:3000/";

    protected override async Task OnInitializedAsync()
    {
        await load();
    }

    protected async Task load()
    {
        students = await httpClient.GetFromJsonAsync<Student[]>($"{baseUrl}api/students");
    }
}